{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"vtp",
				"vtp_mesh	statement"
			],
			[
				"vt",
				"vtp_mesh	statement"
			],
			[
				"split",
				"splitext	function"
			],
			[
				"disp",
				"disp_vol	statement"
			],
			[
				"count_",
				"count_diff"
			],
			[
				"temp",
				"temp_line	statement"
			],
			[
				"cou",
				"count_diff"
			],
			[
				"count",
				"count_waveHead2"
			],
			[
				"inf",
				"infinite"
			],
			[
				"wave",
				"waveHead	statement"
			],
			[
				"ra",
				"radAll"
			],
			[
				"num",
				"num_bodies	statement"
			],
			[
				"h",
				"hdf5"
			],
			[
				"wamit",
				"wamit_data_obj	statement"
			],
			[
				"wr",
				"write_hdf5	function"
			],
			[
				"plot",
				"plot_am_rd"
			],
			[
				"raw",
				"raw"
			],
			[
				"ex_",
				"ex_phase	statement"
			],
			[
				"n_",
				"n_w	statement"
			],
			[
				"H",
				"HydrodynamicData	class"
			],
			[
				"flip",
				"flipud	function"
			],
			[
				"read",
				"readlines"
			],
			[
				"result",
				"results_dir	param"
			],
			[
				"c",
				"ceil	import"
			],
			[
				"dup",
				"dupCount	statement"
			],
			[
				"k",
				"key	forflow"
			],
			[
				"a",
				"all	statement"
			],
			[
				"tra",
				"trapz	function"
			],
			[
				"t",
				"tSeries	statement"
			],
			[
				"wsm",
				"wsmBase"
			],
			[
				"te",
				"tensorinv	function"
			],
			[
				"d",
				"dnvBase	statement"
			],
			[
				"dnv",
				"dnvFreq	statement"
			],
			[
				"rm",
				"remove	function"
			],
			[
				"write",
				"writeVtp	function"
			],
			[
				"save",
				"savetxt	function"
			],
			[
				"am",
				"amTemp	statement"
			],
			[
				"re",
				"re"
			],
			[
				"m",
				"m	statement"
			],
			[
				"n",
				"name"
			],
			[
				"w",
				"waveDir"
			],
			[
				"b",
				"buoyForce"
			],
			[
				"vo",
				"volDisp"
			],
			[
				"g",
				"g"
			],
			[
				"at",
				"attrs	function"
			],
			[
				"Hy",
				"HydrodynamicExcitation"
			],
			[
				"iin",
				"interactive	function"
			],
			[
				"aq",
				"aqwaio"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "ever",
		"selected_items":
		[
			[
				"ever",
				"Evernote: List recent notes"
			],
			[
				"update",
				"Evernote: Update Evernote Note"
			],
			[
				"evernote",
				"Evernote: Send to Evernote as new note"
			],
			[
				"evern",
				"Evernote: Send to Evernote as new note"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"python",
				"SublimeREPL: Python - IPython"
			],
			[
				"repl",
				"SublimeREPL: Python"
			],
			[
				"pydyc",
				"Python 2 Doc Search (PyDOC)"
			],
			[
				"pydoc",
				"Python 2 Doc Search (PyDOC)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"shell",
				"SublimeREPL: Shell"
			],
			[
				"ipy",
				"SublimeREPL: Python - IPython"
			],
			[
				"pyth",
				"SublimeREPL: Python"
			],
			[
				"PYTHON",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"sublimeREPL:py",
				"SublimeREPL: Python"
			],
			[
				"rep",
				"SublimeREPL: Python - IPython"
			],
			[
				"re",
				"SublimeREPL: Python"
			],
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 370.0
	},
	"console":
	{
		"height": 201.0,
		"history":
		[
			"a",
			"a+=1",
			"a = 5",
			"file_diff_menue",
			"import matplotlib",
			"ipython",
			"ls",
			"a",
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"pdb",
			"import numpy",
			"a = 5",
			"os.system('pwd')",
			"os.system('ls')",
			"import os",
			"from matplotlib import *",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/mlawson/Applications/OpenWARP"
	],
	"file_history":
	[
		"/Users/mlawson/Applications/bemio/tutorials/nemoh/run.py",
		"/Users/mlawson/Applications/nemoh/matlabRoutines/nonsymmetrical-win/Results/RadiationCoefficients.tec",
		"/Users/mlawson/Applications/nemoh/matlabRoutines/nonsymmetrical-osx/Nemoh.cal",
		"/Users/mlawson/Applications/nemoh/matlabRoutines/nonsymmetrical-osx/Results/index.dat",
		"/Users/mlawson/Applications/nemoh/matlabRoutines/nonsymmetrical-win/Results/index.dat",
		"/Users/mlawson/Applications/nemoh/matlabRoutines/nonsymmetrical-osx/mesh/NonSymmetrical.dat",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/push_doc.sh",
		"/Users/mlawson/Applications/ojs-2.4.6/index.php",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/OpenWARP.bib",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/index.rst",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/acknowledgments.rst",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/down_and_inst.rst",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/license.rst",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/issues.rst",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/doc.rst",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/conf.py",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/source/lisense.rst",
		"/Users/mlawson/Applications/OpenWARP/doc/sphinx/make_html.sh",
		"/Users/mlawson/Applications/OpenWARP/doc/source/index.rst",
		"/Users/mlawson/Applications/bemio/bemio/mesh_utilities/mesh.py",
		"/Users/mlawson/Applications/OpenWARP.hold/installers/mac/.gitattributes",
		"/Users/mlawson/Applications/OpenWARP/doc/view.sh",
		"/Users/mlawson/Applications/bemio/doc/source/conf.py",
		"/Users/mlawson/Applications/OpenWARP/doc/source/conf.py",
		"/Users/mlawson/Applications/OpenWARP/doc/.gitignore",
		"/Users/mlawson/Applications/OpenWARP/.gitignore",
		"/Users/mlawson/Applications/OpenWARP/.git/info/exclude",
		"/Users/mlawson/Applications/bemio/tutorials/mesh/vtk_cutter_test.py",
		"/Users/mlawson/Applications/bemio/tutorials/wamit/data/wec3.out",
		"/Users/mlawson/Applications/bemio/tutorials/mesh/run.py",
		"/Users/mlawson/Applications/nemoh/matlabRoutines/nonsymmetrical-osx/NonSymmetrical.dat",
		"/Users/mlawson/.bashrc",
		"/Users/mlawson/Dropbox/NREL/projects/ecm/ecm_1/geometry/bemio_convert.py",
		"/Users/mlawson/Dropbox/NREL/projects/ecm/ecm_1/nemoh/input.txt",
		"/Users/mlawson/Dropbox/NREL/projects/ecm/ecm_1/nemoh/Mesh.cal",
		"/Users/mlawson/Dropbox/NREL/projects/ecm/ecm_1/nemoh/ID.dat",
		"/Users/mlawson/Applications/bemio/bemio/io/wamit.py",
		"/Users/mlawson/Applications/bemio/bemio/data_structures/bem.py",
		"/Users/mlawson/Applications/bemio/tutorials/mesh/data/non-symmetrical.gdf",
		"/Users/mlawson/Applications/bemio/tutorials/mesh/.gitignore",
		"/Users/mlawson/Dropbox/NREL/projects/wec3/01-F3OF-HDB/wamitRuns/wamitRun-aboutCg-dw/wec3.pot",
		"/Users/mlawson/Dropbox/NREL/projects/ecm/test_case_geometry/wamit/ecm_1.pot",
		"/Users/mlawson/Dropbox/NREL/projects/ecm/test_case_geometry/wamit/ecm_1.frc",
		"/Users/mlawson/Dropbox/NREL/projects/ecm/test_case_geometry/wamit/ecm_1.cfg",
		"/Users/mlawson/Applications/bemio/run/wamit_not_working_case/owc.out",
		"/Users/mlawson/Applications/bemio/run/wamit_not_working_case/bemio_run.py",
		"/Users/mlawson/Applications/bemio/run/wamit/data/wec3.out",
		"/Users/mlawson/Applications/bemio/doc/source/aqwa.rst",
		"/Users/mlawson/Applications/WEC-Sim/doc/users-guide/source/theory.rst",
		"/Users/mlawson/Applications/bemio/doc/source/wamit.rst",
		"/Users/mlawson/Applications/bemio/run/wamit_not_working_case/OWC.cfg",
		"/Users/mlawson/Applications/bemio/run/wamit_not_working_case/OWC.frc",
		"/Users/mlawson/Applications/bemio/run/wamit_not_working_case/OWC.pot",
		"/Users/mlawson/Applications/WEC-Sim/doc/users-guide/source/index.rst",
		"/Users/mlawson/Applications/bemio/doc/source/bemio.bib",
		"/Users/mlawson/Applications/bemio/.gitignore",
		"/Users/mlawson/Applications/bemio/bemio/io/nemoh.py",
		"/Users/mlawson/Applications/bemio/run/abengoa/aqwaData/run.py",
		"/Users/mlawson/Applications/bemio/tutorials/mesh/data/non-symmetrical_example_output.gdf",
		"/Users/mlawson/Applications/bemio_bem_update/bemio/mesh_utilities/mesh.py",
		"/Users/mlawson/Applications/nemoh/Verification/2Bodies/Results/ExcitationForce.tec",
		"/Users/mlawson/Applications/bemio_bem_update/bemio/runners/nemoh.py",
		"/Users/mlawson/Applications/bemio/bemio/__init__.py",
		"/Users/mlawson/Applications/nemoh/Verification/2Bodies/Results/RadiationCoefficients.tec",
		"/Users/mlawson/Applications/nemoh/Verification/2Bodies/Results/DiffractionForce.tec",
		"/Users/mlawson/Applications/bemio/tutorials/aqwa/run.py",
		"/Users/mlawson/Applications/bemio/tutorials/aqwa/data/aqwa_example_data.AH1",
		"/Users/mlawson/Desktop/cherry_test.py",
		"/Users/mlawson/Desktop/public/css/style.css",
		"/Applications/OpenWarp/openwarpgui/main.py",
		"/Applications/OpenWarp/openwarpgui/openwarp/settings.py",
		"/Applications/OpenWarp/openwarpgui/requirements.txt",
		"/Users/mlawson/Applications/WEC-Sim/applications/RM3/hydroData/readWamit.py",
		"/Users/mlawson/Applications/WEC-Sim/applications/OSWEC/hydroData/readWamit.py",
		"/Users/mlawson/Desktop/deviceForCaseStudies.ipe",
		"/Users/mlawson/Documents/RE METS papers to load onto the IMRECMETS website - this time with attachment!",
		"/Users/mlawson/Applications/WEC-Sim/doc/users-guide/build/.gitignore",
		"/Users/mlawson/Applications/WEC-Sim/doc/users-guide/.gitignore",
		"/Users/mlawson/Desktop/DomainDownloadList-249621304.csv",
		"/Users/mlawson/Applications/WEC-Sim/doc/users-guide/README.txt",
		"/Users/mlawson/Applications/OpenWARP/LICENSE",
		"/Users/mlawson/Applications/bemio/tutorials/wamit/run.py",
		"/Users/mlawson/Applications/bemio/test.py",
		"/Users/mlawson/Applications/bemio/tutorials/nemoh/run.ipynb",
		"/Users/mlawson/Applications/bemio/run/wamit/run.py",
		"/Users/mlawson/.pythonstartup",
		"/Users/mlawson/Dropbox/NREL/conferences-workshops/2015-METS-WashingtonDC/papers/final_submissions/rename_files.py",
		"/Users/mlawson/Dropbox/NREL/conferences-workshops/2015-METS-WashingtonDC/papers/final_submissions/Active Papers/rename_files.py",
		"/Users/mlawson/Desktop/test_diff.sh",
		"/Users/mlawson/Applications/WEC-Sim/applications/RM3/geometry/plate.stl",
		"/Users/mlawson/Applications/WEC-Sim/applications/RM3/geometry/float.stl",
		"/Users/mlawson/Applications/WEC-Sim/doc/users-guide/source/WEC-Sim.bib",
		"/Users/mlawson/Applications/WEC-Sim/doc/users-guide/source/conf.py",
		"/Users/mlawson/Applications/WEC-Sim/doc/users-guide/source/state_space.rst",
		"/Users/mlawson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/mlawson/OpenWarpFiles/user_data/simulation_20150409151225_1ebf9deedefd11e4846180e6501d2e5e/simulation_log.txt",
		"/Users/mlawson/Applications/bemio/doc/source/installing.rst",
		"/Users/mlawson/Applications/bemio/doc/source/nemoh.rst",
		"/Users/mlawson/Dropbox/NREL/conferences-workshops/2015-METS-WashingtonDC/author_and_session_chair_communications/author_pre_conference_email_1.md",
		"/Users/mlawson/Dropbox/NREL/conferences-workshops/2015-METS-WashingtonDC/publication_copyright/mets2015_license.rst",
		"/Users/mlawson/Desktop/run/run.rst",
		"/Users/mlawson/Desktop/run (2)/run.rst",
		"/Users/mlawson/Applications/bemio/doc/source/getting_started.rst",
		"/Users/mlawson/Applications/bemio/doc/source/index.rst",
		"/Users/mlawson/Applications/bemio/doc/Makefile",
		"/Users/mlawson/Desktop/run.py",
		"/Users/mlawson/Desktop/run.rst",
		"/Users/mlawson/Desktop/run.ipynb",
		"/Users/mlawson/Desktop/run (1).rst",
		"/Users/mlawson/Desktop/run (2).rst",
		"/Users/mlawson/Desktop/run (3).rst",
		"/Users/mlawson/Desktop/run (1)/run.rst",
		"/Users/mlawson/Applications/bemio/doc/source/tutorials.rst",
		"/Users/mlawson/Applications/bemio/doc/push_html.sh",
		"/Users/mlawson/Applications/bemio/doc/view.sh",
		"/Users/mlawson/Applications/bemio/doc/.gitignore",
		"/Users/mlawson/Desktop/run (1).py",
		"/Users/mlawson/Applications/bemio/tutorials/nemoh/data/two_body/Mesh/Hydrostatics_0.dat",
		"/Users/mlawson/Applications/bemio/tutorials/nemoh/data/two_body/Results/ExcitationForce.tec",
		"/Users/mlawson/Applications/bemio/tutorials/nemoh/nemoh_bemio.out",
		"/Users/mlawson/Applications/bemio/doc/source/module_doc.rst",
		"/Users/mlawson/Applications/bemio/doc/source/api.rst",
		"/Users/mlawson/Applications/bemio/doc/source/_static/default.css",
		"/Users/mlawson/Applications/bemio/doc/source/io_doc.rst",
		"/Users/mlawson/Applications/bemio/doc/source/documentation.rst",
		"/Users/mlawson/Applications/bemio/bemio/io/aqwa.py",
		"/Users/mlawson/Applications/bemio/setup.py",
		"/Users/mlawson/Applications/bemio/bemio/mesh_utilities/__init__.py"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"deleteFace",
			"self.mesh",
			"mesh",
			"outputFile",
			"non-",
			"self.",
			"meshFileName",
			"numFaces",
			"numPoints",
			"ead_nemoh",
			"read_vtp",
			"read_stl",
			"read_gdf",
			"meshData",
			"fileName",
			"writeGdf",
			"writeNemoh",
			"writeVtp",
			"mkVtkIdList",
			"readNemoh",
			"readVtp",
			"readStl",
			"readGdf",
			"rao",
			"2.31454",
			"ex",
			"1.74671",
			"1.7467",
			"1.746",
			"1.7135",
			"RESPON",
			"Response",
			"9.926186",
			"9.7375",
			"count_diff",
			"np.nan*np.zeros([6*num_bodies,6*num_bodies])",
			"print 'Body ' + str(i) ",
			"6.240",
			"1.9490",
			"1.94905",
			"1.949058E-01",
			"Wave Heading (deg)",
			"DIFFRACTION EXCITING FORCES AND MOMENTS",
			"raw(i+4)",
			"aq",
			"aio",
			"aqwa_data",
			"wamit_data_obj",
			"port",
			"    *",
			"	*",
			"*",
			"bat",
			"wamit_data",
			"object",
			"aq.",
			"aq",
			"wamit_data_obj",
			"data[key].",
			"-",
			"~",
			".",
			"~",
			"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
			"-",
			"##",
			"nem",
			"nio",
			"####",
			"wamit_data_obj",
			"file_break",
			"'*'",
			"*",
			"50",
			"raw",
			"cal",
			"hydrostatics",
			"0+6*i",
			"6+6*i,:",
			"data",
			"ex_force",
			"hydrostatics",
			"body_num",
			"hydrostatics",
			"        ",
			"self.cg",
			"out_base_name",
			"600pt",
			"import",
			"w",
			"wamit_data_obj",
			"w",
			"read_kh",
			"read_hydrostatics",
			"function",
			"Downloading bemio",
			"------------\n",
			"hd",
			"exclude_trees",
			"str(n)",
			"str(m)",
			"str(key)",
			"maxdepth",
			"bem_raw/",
			"/rd",
			"/am",
			"/excitation_coeffs",
			"/ex",
			"/ss",
			"/irf",
			"/hydro_coeffs/irf",
			"ssRadfDComp",
			"ssRadfCComp",
			"ssRadfBComp",
			"rad_conv",
			"ssRadfD",
			"self.ss.irk_bss",
			"irk_bss",
			"h5load",
			"state_space",
			"ssRadfAComp",
			"est",
			"self.fAddedMassest",
			"self.fDampingest",
			"Krlti",
			"R2BT",
			"wDir",
			"wDepth"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": true,
		"regex": false,
		"replace_history":
		[
			"wamit_data_obj",
			"self",
			"self.ss.max",
			"self.ss.rad_conv   = np.array([])",
			"self.ss.it",
			"self.ss.ss_it",
			"self.ss.ss_rad_conv",
			"self.ss.r2t",
			"self.ss.irk_bss",
			"self.ss.r2_thresh",
			"b",
			"a",
			"proc",
			"w",
			"raw",
			"hydro_data",
			"amrdProc",
			"tmp",
			"z_ind",
			"ca",
			"cm",
			"shape_rd",
			"t_ind",
			"'body' + str(key) + ",
			"'simulation_parameters",
			"simulation_parameters",
			"simulation_parameters/",
			"/properties/",
			"/sim_parameters/",
			"/hydro_coeffs/",
			"data[key].name",
			"wsm",
			"dnv",
			"pdsB",
			"dnvB",
			"wsmB",
			"",
			"pds",
			"",
			"dnvW",
			"dnvT",
			"wsmW",
			"key",
			"str(self",
			"",
			",",
			" ",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 241.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "OpenWARP.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mesh",
				"bemio/mesh_utilities/mesh.py"
			],
			[
				"run",
				"tutorials/mesh/run.py"
			],
			[
				"mesh.py",
				"bemio/mesh_utilities/mesh.py"
			],
			[
				"me",
				"bemio/mesh_utilities/mesh.py"
			],
			[
				"bem",
				"bemio/data_structures/bem.py"
			],
			[
				"wamit",
				"bemio/io/wamit.py"
			],
			[
				"wec",
				"doc/users-guide/source/WEC-Sim.bib"
			],
			[
				"conf",
				"doc/users-guide/source/conf.py"
			],
			[
				"theo",
				"doc/users-guide/source/theory.rst"
			],
			[
				"state",
				"doc/users-guide/source/state_space.rst"
			],
			[
				"ind",
				"doc/users-guide/source/index.rst"
			],
			[
				"int",
				"doc/build/html/_sources/index.txt"
			],
			[
				"aw",
				"bemio/io/aqwa.py"
			],
			[
				"bem.py",
				"bemio/data_structures/bem.py"
			],
			[
				"nemoh",
				"bemio/io/nemoh.py"
			],
			[
				"nemo",
				"bemio/io/nemoh.py"
			],
			[
				"run.py",
				"tutorials/nemoh/run.py"
			],
			[
				"",
				"bemio/data_structures/bem.py"
			],
			[
				"bem.",
				"bemio/data_structures/bem.py"
			],
			[
				"aqwa",
				"io/aqwa.py"
			],
			[
				"wamti",
				"io/wamit.py"
			],
			[
				"gett",
				"doc/source/getting_started_test.rst"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 247.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
